# Goal is to see if we can have one job output a dictionary that another job can use the value of a particular key from that dictionary
name: Dictionary Key

on:
    workflow_dispatch:
    push:

jobs:
    dict_gen:
        runs-on: ubuntu-latest
        outputs:
            dictionary: ${{ steps.set_dict.outputs.full_dict }}
        steps:
            - name: Generate Dictionary
              id: set_dict
              run: |
                echo "::set-output name=full_dict::{\"key1\": \"value1\", \"key2\": \"value2\", \"def\": \"fallback\"}"
    bad_dict_gen:
        runs-on: ubuntu-latest
        outputs:
            dictionary: ${{ steps.set_dict.outputs.bad_dict }}
        steps:
            - name: Generate Dictionary
              id: set_dict
              # Generates an invalid dict
              run: |
                echo "::set-output name=bad_dict::{\"key1\": \"value1\", \"key2"


    dict_consumer:
        runs-on: ubuntu-latest
        needs: dict_gen
        steps:
            - name: Use Full
              run: echo ${{ needs.dict_gen.outputs.dictionary }}
            - name: Dict key
              run: echo ${{ needs.dict_gen.outputs.dictionary.key1 }}
            - name: Dict key name ${{ needs.dict_gen.outputs.dictionary }}
              run: echo ${{ needs.dict_gen.outputs.dictionary }}
            - name: Simple from json
              run: echo ${{ fromJson(needs.dict_gen.outputs.dictionary) }}
            - name: Simple from json key
              run: echo ${{ fromJson(needs.dict_gen.outputs.dictionary).key1 }}
            - name: Simple from dynamic json key2
              run: echo ${{ fromJson(needs.dict_gen.outputs.dictionary)['key2'] }}
            - name: Simple from dynamic json key fake
              run: echo ${{ fromJson(needs.dict_gen.outputs.dictionary)['key3'] || 'default' }}
            - name: Simple from dynamic json fallback
              run: echo ${{ fromJson(needs.dict_gen.outputs.dictionary)['key_fake'] || fromJson(needs.dict_gen.outputs.dictionary).def }}

    bad_dict_consumer:
        runs-on: ubuntu-latest
        needs: bad_dict_gen
        steps:
          - name: Use Full Bad
            run: echo ${{ needs.bad_dict_gen.outputs.dictionary }}
          - name: Simple from json bad
            run: echo ${{ fromJson(needs.bad_dict_gen.outputs.dictionary) }}